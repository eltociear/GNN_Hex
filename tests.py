from qango6x6 import Quango6x6
from patterns_game import Patterns_Game,convert_into_patterns_game

def test_pg():
      q = Quango6x6()
      pos1 = [
        int("0b000001"
              "010010"
              "100000"
              "011110"
              "010000"
              "000010",2),
        int("0b000010"
              "000001"
              "010010"
              "100001"
              "010000"
              "100001",2),
      ]
      q.set_state(pos1, True)
      pg = convert_into_patterns_game(q)
      pg.sort_myself()
      print(pg)
def testfull():
    q=Quango6x6()
    pos1 = [
        int("0b100000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b010000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    pos2 = [
        int("0b111111"
              "111111"
              "111111"
              "000000"
              "000000"
              "000000",2),
        int("0b000000"
              "000000"
              "000000"
              "111111"
              "111111"
              "111111",2),
    ]
    q.set_state(pos2, True)
    assert q.check_full()==True
    q.set_state(pos1, True)
    assert q.check_full()==False

testfull()
def teshash():
    q=Quango6x6()
    pos1 = [
        int("0b100000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b010000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    pos2 = [
        int("0b000001"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b000010"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    pos3 = [
        int("0b000001"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b000000"
              "000001"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    pos4 = [
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000001",2),
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000001"
              "000000",2),
    ]
    pos5 = [
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000001",2),
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000010",2),
    ]
    pos6 = [
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "100000",2),
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "010000",2),
    ]
    pos7 = [
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "100000",2),
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "100000"
              "000000",2),
    ]
    pos8 = [
        int("0b100000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b000000"
              "100000"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    neq1 = [
        int("0b000000"
              "100000"
              "000000"
              "000000"
              "000000"
              "000000",2),
        int("0b100000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000000",2),
    ]
    neq2 = [
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000001"
              "000000",2),
        int("0b000000"
              "000000"
              "000000"
              "000000"
              "000000"
              "000001",2),
    ]
    poses = [pos1,pos2,pos3,pos4,pos5,pos6,pos7,pos8,neq1,neq2]
    def dohash(p):
        q.position=p
        return q.hashpos()
    print([dohash(p) for p in poses])

if __name__=='__main__':
      test_pg()